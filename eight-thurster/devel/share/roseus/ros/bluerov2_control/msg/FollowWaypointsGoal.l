;; Auto-generated. Do not edit!


(when (boundp 'bluerov2_control::FollowWaypointsGoal)
  (if (not (find-package "BLUEROV2_CONTROL"))
    (make-package "BLUEROV2_CONTROL"))
  (shadow 'FollowWaypointsGoal (find-package "BLUEROV2_CONTROL")))
(unless (find-package "BLUEROV2_CONTROL::FOLLOWWAYPOINTSGOAL")
  (make-package "BLUEROV2_CONTROL::FOLLOWWAYPOINTSGOAL"))

(in-package "ROS")
;;//! \htmlinclude FollowWaypointsGoal.msg.html
(if (not (find-package "UUV_CONTROL_MSGS"))
  (ros::roseus-add-msgs "uuv_control_msgs"))


(defclass bluerov2_control::FollowWaypointsGoal
  :super ros::object
  :slots (_waypoints ))

(defmethod bluerov2_control::FollowWaypointsGoal
  (:init
   (&key
    ((:waypoints __waypoints) (instance uuv_control_msgs::WaypointSet :init))
    )
   (send-super :init)
   (setq _waypoints __waypoints)
   self)
  (:waypoints
   (&rest __waypoints)
   (if (keywordp (car __waypoints))
       (send* _waypoints __waypoints)
     (progn
       (if __waypoints (setq _waypoints (car __waypoints)))
       _waypoints)))
  (:serialization-length
   ()
   (+
    ;; uuv_control_msgs/WaypointSet _waypoints
    (send _waypoints :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uuv_control_msgs/WaypointSet _waypoints
       (send _waypoints :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uuv_control_msgs/WaypointSet _waypoints
     (send _waypoints :deserialize buf ptr-) (incf ptr- (send _waypoints :serialization-length))
   ;;
   self)
  )

(setf (get bluerov2_control::FollowWaypointsGoal :md5sum-) "58e5d76705941fad7db4292f7d5be15d")
(setf (get bluerov2_control::FollowWaypointsGoal :datatype-) "bluerov2_control/FollowWaypointsGoal")
(setf (get bluerov2_control::FollowWaypointsGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
uuv_control_msgs/WaypointSet waypoints

================================================================================
MSG: uuv_control_msgs/WaypointSet
# Copyright (c) 2016 The UUV Simulator Authors.
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the \"License\");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

std_msgs/Header header
std_msgs/Time start_time
uuv_control_msgs/Waypoint[] waypoints

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: std_msgs/Time
time data

================================================================================
MSG: uuv_control_msgs/Waypoint
# Copyright (c) 2016 The UUV Simulator Authors.
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the \"License\");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

std_msgs/Header header
geometry_msgs/Point point
float64 max_forward_speed
float64 heading_offset
bool use_fixed_heading
float64 radius_of_acceptance

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :bluerov2_control/FollowWaypointsGoal "58e5d76705941fad7db4292f7d5be15d")


